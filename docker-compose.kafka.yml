version: '3.8'

# KAFKA COMPOSE PARAMETERS https://github.com/robcowart/docker_compose_cookbook/blob/master/confluent_kafka_oss/docker-compose.yml

services:

  ugc-service-kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ugc-service-kafka-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ugc-service-network

  ugc-service-kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ugc-service-kafka-broker-1
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ugc-service-kafka-zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ugc-service-kafka-broker-1:19092,PLAINTEXT_HOST://localhost:${KAFKA_BROKER_1_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ADVERTISED_HOST_NAME: ugc-service-kafka-broker-1
    healthcheck:
      test: nc -z localhost ${KAFKA_BROKER_1_PORT} || exit -1
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      - ugc-service-kafka-zookeeper
    networks:
      - ugc-service-network
    ports:
      - ${KAFKA_BROKER_1_PORT}:${KAFKA_BROKER_1_PORT}
    env_file:
      - ./.env

  ugc-service-kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ugc-service-kafka-broker-2
    restart: always
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: ugc-service-kafka-zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ugc-service-kafka-broker-2:19093,PLAINTEXT_HOST://localhost:${KAFKA_BROKER_2_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ADVERTISED_HOST_NAME: ugc-service-kafka-broker-2
    healthcheck:
      test: nc -z localhost ${KAFKA_BROKER_2_PORT} || exit -1
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      - ugc-service-kafka-zookeeper
    networks:
      - ugc-service-network
    ports:
      - ${KAFKA_BROKER_2_PORT}:${KAFKA_BROKER_2_PORT}
    env_file:
      - ./.env

  ugc-service-kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ugc-service-kafka-broker-3
    restart: always
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: ugc-service-kafka-zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ugc-service-kafka-broker-3:19094,PLAINTEXT_HOST://localhost:${KAFKA_BROKER_3_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ADVERTISED_HOST_NAME: ugc-service-kafka-broker-3
    healthcheck:
      test: nc -z localhost ${KAFKA_BROKER_3_PORT} || exit -1
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      - ugc-service-kafka-zookeeper
    networks:
      - ugc-service-network
    ports:
      - ${KAFKA_BROKER_3_PORT}:${KAFKA_BROKER_3_PORT}
    env_file:
      - ./.env

  ugc-service-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ugc-service-kafka-ui
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=ugc-service-kafka-broker-1:19092,ugc-service-kafka-broker-2:19093,ugc-service-kafka-broker-3:19094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=ugc-service-kafka-zookeeper:2181
    depends_on:
      ugc-service-kafka-broker-1:
        condition: service_healthy
      ugc-service-kafka-broker-2:
        condition: service_healthy
      ugc-service-kafka-broker-3:
        condition: service_healthy
    links:
      - ugc-service-kafka-broker-1
      - ugc-service-kafka-broker-2
      - ugc-service-kafka-broker-3
      - ugc-service-kafka-zookeeper
    networks:
      - ugc-service-network
    ports:
      - ${KAFKA_UI_PORT}:8080
    env_file:
      - ./.env

networks:
  ugc-service-network:
    external:
      name: ugc-service-network
