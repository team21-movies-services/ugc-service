openapi: 3.0.3
info:
  title: UGC-service
  description: Описание для endpoint'ов ugc сервиса
  version: 0.1.0
tags:
  - name: Events control
    description: Управление эвентами
  - name: Events read
    description: Чтение эвентов
paths:
  /events:
    post:
      tags:
        - Events control
      summary: Создать эвент
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEvent'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Conflict
      security:
        - access_key: []
  /events/{object_id}:
    patch:
      tags:
        - Events control
      summary: Редактировать эвент
      parameters:
        - $ref: '#/components/parameters/ObjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEvent'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - access_key: []
  /events/{object_id}:
    delete:
      tags:
        - Events control
      summary: Удалить эвент
      parameters:
        - $ref: '#/components/parameters/ObjectId'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - access_key: []
  /events/{object_type}:
    get:
      tags:
        - Events read
      summary: Получить объекты пользователя
      parameters:
        - $ref: '#/components/parameters/ObjectTypes'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - access_key: []
  /events/{object_type}/{object_id}:
    get:
      tags:
        - Events read
      summary: Детальная информация об объекте
      parameters:
        - $ref: '#/components/parameters/ObjectTypes'
        - $ref: '#/components/parameters/ObjectId'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - access_key: []
  /events/{object_type}/{object_id}/{content_type}:
    get:
      tags:
        - Events read
      summary: Получить дополнительный контент по объекту
      parameters:
        - $ref: '#/components/parameters/ObjectTypes'
        - $ref: '#/components/parameters/ObjectId'
        - $ref: '#/components/parameters/ContentsType'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - access_key: []
components:
  schemas:
    BaseEvent:
      type: object
      properties:
        eventType:
          $ref: '#/components/schemas/EventTypeEnum'
        eventTime:
          type: number
          format: timestamp
          example: 1691674852
        eventData:
          type: object
          oneOf:
            - $ref: '#/components/schemas/CommentEvent'
            - $ref: '#/components/schemas/ReactionEvent'
            - $ref: '#/components/schemas/RatingEvent'
            - $ref: '#/components/schemas/FavoriteEvent'
      required:
        - eventType
        - eventTime
        - eventData
    CommentEvent:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          example: 'e5ca88e2-c94c-473b-886b-7e6d65de1997'
        film_id:
          type: string
          format: uuid
          example: 'fb68adb6-f4b1-4511-95d5-5ca6cffffafc'
        parent_type:
          $ref: '#/components/schemas/ParentEnum'
        parent_id:
          type: string
          format: uuid
          example: '64b47860-795a-46f5-87b4-aeddbd033521'
        content:
          type: string
          format: text
      required:
        - user_id
        - film_id
        - parent_type
        - parent_id
        - content
    ReactionEvent:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          example: 'e5ca88e2-c94c-473b-886b-7e6d65de1997'
        film_id:
          type: string
          format: uuid
          example: 'fb68adb6-f4b1-4511-95d5-5ca6cffffafc'
        parent_type:
          $ref: '#/components/schemas/ParentEnum'
        parent_id:
          type: string
          format: uuid
          example: '64b47860-795a-46f5-87b4-aeddbd033521'
        reaction:
          type: boolean
      required:
        - user_id
        - film_id
        - parent_type
        - parent_id
        - reaction
    RatingEvent:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          example: 'e5ca88e2-c94c-473b-886b-7e6d65de1997'
        film_id:
          type: string
          format: uuid
          example: 'fb68adb6-f4b1-4511-95d5-5ca6cffffafc'
        parent_type:
          $ref: '#/components/schemas/ParentEnum'
        parent_id:
          type: string
          format: uuid
          example: '64b47860-795a-46f5-87b4-aeddbd033521'
        rate:
          type: integer
          minimum: 0
          maximum: 10
      required:
        - user_id
        - film_id
        - parent_type
        - parent_id
        - rate
    FavoriteEvent:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          example: 'e5ca88e2-c94c-473b-886b-7e6d65de1997'
        film_id:
          type: string
          format: uuid
          example: 'fb68adb6-f4b1-4511-95d5-5ca6cffffafc'
        parent_type:
          $ref: '#/components/schemas/ParentEnum'
        parent_id:
          type: string
          format: uuid
          example: '64b47860-795a-46f5-87b4-aeddbd033521'
      required:
        - user_id
        - film_id
        - parent_type
        - parent_id
    EventTypeEnum:
      type: string
      enum:
        - comment
        - reaction
        - rating
        - favorite
    ParentEnum:
      type: string
      enum:
        - film
        - review
        - comment
    ObjectsTypeEnum:
      type: string
      enum:
        - movies
        - reviews
        - favorites
        - reactions
        - comment
  parameters:
    ObjectTypes:
      name: object_type
      in: path
      description: UUID объекта
      required: true
      schema:
        $ref: '#/components/schemas/ObjectsTypeEnum'
    ObjectId:
      name: object_id
      in: path
      description: UUID объекта
      required: true
      schema:
        type: string
        format: uuid
    ContentsType:
      name: content_type
      in: path
      description: Тип контента
      required: true
      schema:
        $ref: '#/components/schemas/ObjectsTypeEnum'
    EventType:
      name: event_type
      in: path
      description: Тип эвента который нужно удалить
      required: true
      schema:
        $ref: '#/components/schemas/EventTypeEnum'
  securitySchemes:
    access_key:
      type: apiKey
      in: header
      name: Authorization